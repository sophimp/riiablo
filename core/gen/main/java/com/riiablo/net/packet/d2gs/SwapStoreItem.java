// automatically generated by the FlatBuffers compiler, do not modify

package com.riiablo.net.packet.d2gs;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class SwapStoreItem extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_25_2_10(); }
  public static SwapStoreItem getRootAsSwapStoreItem(ByteBuffer _bb) { return getRootAsSwapStoreItem(_bb, new SwapStoreItem()); }
  public static SwapStoreItem getRootAsSwapStoreItem(ByteBuffer _bb, SwapStoreItem obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public SwapStoreItem __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int itemId() { int o = __offset(4); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public int storeLoc() { int o = __offset(6); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public int x() { int o = __offset(8); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public int y() { int o = __offset(10); return o != 0 ? bb.getInt(o + bb_pos) : 0; }

  public static int createSwapStoreItem(FlatBufferBuilder builder,
      int itemId,
      int storeLoc,
      int x,
      int y) {
    builder.startTable(4);
    SwapStoreItem.addY(builder, y);
    SwapStoreItem.addX(builder, x);
    SwapStoreItem.addStoreLoc(builder, storeLoc);
    SwapStoreItem.addItemId(builder, itemId);
    return SwapStoreItem.endSwapStoreItem(builder);
  }

  public static void startSwapStoreItem(FlatBufferBuilder builder) { builder.startTable(4); }
  public static void addItemId(FlatBufferBuilder builder, int itemId) { builder.addInt(0, itemId, 0); }
  public static void addStoreLoc(FlatBufferBuilder builder, int storeLoc) { builder.addInt(1, storeLoc, 0); }
  public static void addX(FlatBufferBuilder builder, int x) { builder.addInt(2, x, 0); }
  public static void addY(FlatBufferBuilder builder, int y) { builder.addInt(3, y, 0); }
  public static int endSwapStoreItem(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public SwapStoreItem get(int j) { return get(new SwapStoreItem(), j); }
    public SwapStoreItem get(SwapStoreItem obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

