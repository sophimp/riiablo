// automatically generated by the FlatBuffers compiler, do not modify

package com.riiablo.net.packet.mcp;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class JoinGame extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_25_2_10(); }
  public static JoinGame getRootAsJoinGame(ByteBuffer _bb) { return getRootAsJoinGame(_bb, new JoinGame()); }
  public static JoinGame getRootAsJoinGame(ByteBuffer _bb, JoinGame obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public JoinGame __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String gameName() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer gameNameAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer gameNameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public String password() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer passwordAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer passwordInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  public int ip() { int o = __offset(8); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public short port() { int o = __offset(10); return o != 0 ? bb.getShort(o + bb_pos) : 0; }
  public int result() { int o = __offset(12); return o != 0 ? bb.getInt(o + bb_pos) : 0; }

  public static int createJoinGame(FlatBufferBuilder builder,
      int gameNameOffset,
      int passwordOffset,
      int ip,
      short port,
      int result) {
    builder.startTable(5);
    JoinGame.addResult(builder, result);
    JoinGame.addIp(builder, ip);
    JoinGame.addPassword(builder, passwordOffset);
    JoinGame.addGameName(builder, gameNameOffset);
    JoinGame.addPort(builder, port);
    return JoinGame.endJoinGame(builder);
  }

  public static void startJoinGame(FlatBufferBuilder builder) { builder.startTable(5); }
  public static void addGameName(FlatBufferBuilder builder, int gameNameOffset) { builder.addOffset(0, gameNameOffset, 0); }
  public static void addPassword(FlatBufferBuilder builder, int passwordOffset) { builder.addOffset(1, passwordOffset, 0); }
  public static void addIp(FlatBufferBuilder builder, int ip) { builder.addInt(2, ip, 0); }
  public static void addPort(FlatBufferBuilder builder, short port) { builder.addShort(3, port, 0); }
  public static void addResult(FlatBufferBuilder builder, int result) { builder.addInt(4, result, 0); }
  public static int endJoinGame(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public JoinGame get(int j) { return get(new JoinGame(), j); }
    public JoinGame get(JoinGame obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

