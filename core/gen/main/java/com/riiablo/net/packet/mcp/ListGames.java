// automatically generated by the FlatBuffers compiler, do not modify

package com.riiablo.net.packet.mcp;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class ListGames extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_25_2_10(); }
  public static ListGames getRootAsListGames(ByteBuffer _bb) { return getRootAsListGames(_bb, new ListGames()); }
  public static ListGames getRootAsListGames(ByteBuffer _bb, ListGames obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public ListGames __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long flags() { int o = __offset(4); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public com.riiablo.net.packet.mcp.GameSession games(int j) { return games(new com.riiablo.net.packet.mcp.GameSession(), j); }
  public com.riiablo.net.packet.mcp.GameSession games(com.riiablo.net.packet.mcp.GameSession obj, int j) { int o = __offset(6); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int gamesLength() { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; }
  public com.riiablo.net.packet.mcp.GameSession.Vector gamesVector() { return gamesVector(new com.riiablo.net.packet.mcp.GameSession.Vector()); }
  public com.riiablo.net.packet.mcp.GameSession.Vector gamesVector(com.riiablo.net.packet.mcp.GameSession.Vector obj) { int o = __offset(6); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }

  public static int createListGames(FlatBufferBuilder builder,
      long flags,
      int gamesOffset) {
    builder.startTable(2);
    ListGames.addGames(builder, gamesOffset);
    ListGames.addFlags(builder, flags);
    return ListGames.endListGames(builder);
  }

  public static void startListGames(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addFlags(FlatBufferBuilder builder, long flags) { builder.addInt(0, (int) flags, (int) 0L); }
  public static void addGames(FlatBufferBuilder builder, int gamesOffset) { builder.addOffset(1, gamesOffset, 0); }
  public static int createGamesVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startGamesVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endListGames(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public ListGames get(int j) { return get(new ListGames(), j); }
    public ListGames get(ListGames obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

